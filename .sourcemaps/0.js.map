{"version":3,"sources":["../../src/pages/add-new-item/add-new-item.module.ts","../../node_modules/@ionic-native/barcode-scanner/index.js","../../src/pages/add-new-item/add-new-item.ts","../../node_modules/@ionic-native/android-permissions/index.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACO;AACA;AACe;AAa/D;IAAA;IAAmC,CAAC;IAAvB,oBAAoB;QAXhC,uEAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,qEAAc;aACf;YACD,OAAO,EAAE;gBACP,sEAAe,CAAC,QAAQ,CAAC,qEAAc,CAAC;aACzC;YACD,SAAS,EAAE;gBACT,qFAAc;aACf;SACF,CAAC;OACW,oBAAoB,CAAG;IAAD,2BAAC;CAAA;AAAH;;;;;;;;;;;AChBjC;AAAA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACqB;AACwB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B;AACA,wDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C,iBAAiB,aAAa;AAC9B;AACA,wDAAwD,QAAQ;AAChE;AACA;AACA;AACA,oBAAoB,OAAO;AAC3B,oBAAoB,IAAI;AACxB,iBAAiB;AACjB;AACA,6DAA6D,QAAQ;AACrE;AACA,SAAS,0EAAmB;AAC5B;AACA;AACA,iDAAiD,WAAW;AAC5D;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACO;AACR,iC;;;;;;;;;;;;;;;;;;;;;;;;ACxGsF;AAC5C;AACgC;AACN;AACL;AAEQ;AAQvE;IA2CI,4BAA4B;IAC5B,wBAAoB,cAA8B,EACvC,OAAsB,EACtB,SAAoB,EACpB,IAAgB,EAChB,EAAa,EACb,EAA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","file":"0.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { IonicPageModule } from 'ionic-angular';\r\nimport { AddNewItemPage } from './add-new-item';\r\nimport { BarcodeScanner } from '@ionic-native/barcode-scanner';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AddNewItemPage,\r\n  ],\r\n  imports: [\r\n    IonicPageModule.forChild(AddNewItemPage),\r\n  ],\r\n  providers: [\r\n    BarcodeScanner\r\n  ]\r\n})\r\nexport class AddNewItemPageModule {}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/add-new-item/add-new-item.module.ts","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Injectable } from '@angular/core';\nimport { Cordova, Plugin, IonicNativePlugin } from '@ionic-native/core';\n/**\n * @name Barcode Scanner\n * @description\n * The Barcode Scanner Plugin opens a camera view and automatically scans a barcode, returning the data back to you.\n *\n * Requires Cordova plugin: `phonegap-plugin-barcodescanner`. For more info, please see the [BarcodeScanner plugin docs](https://github.com/phonegap/phonegap-plugin-barcodescanner).\n *\n * @usage\n * ```typescript\n * import { BarcodeScanner } from '@ionic-native/barcode-scanner';\n *\n * constructor(private barcodeScanner: BarcodeScanner) { }\n *\n * ...\n *\n *\n * this.barcodeScanner.scan().then((barcodeData) => {\n *  // Success! Barcode data is here\n * }, (err) => {\n * \t// An error occurred\n * });\n * ```\n * @interfaces\n * BarcodeScannerOptions\n * BarcodeScanResult\n */\nvar BarcodeScanner = (function (_super) {\n    __extends(BarcodeScanner, _super);\n    function BarcodeScanner() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.Encode = {\n            TEXT_TYPE: 'TEXT_TYPE',\n            EMAIL_TYPE: 'EMAIL_TYPE',\n            PHONE_TYPE: 'PHONE_TYPE',\n            SMS_TYPE: 'SMS_TYPE'\n        };\n        return _this;\n    }\n    /**\n     * Open the barcode scanner.\n     * @param options {BarcodeScannerOptions} Optional options to pass to the scanner\n     * @returns {Promise<any>} Returns a Promise that resolves with scanner data, or rejects with an error.\n     */\n    BarcodeScanner.prototype.scan = function (options) { return; };\n    /**\n     * Encodes data into a barcode.\n     * NOTE: not well supported on Android\n     * @param type {string} Type of encoding\n     * @param data {any} Data to encode\n     * @returns {Promise<any>}\n     */\n    BarcodeScanner.prototype.encode = function (type, data) { return; };\n    BarcodeScanner.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    BarcodeScanner.ctorParameters = function () { return []; };\n    __decorate([\n        Cordova({\n            callbackOrder: 'reverse'\n        }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", Promise)\n    ], BarcodeScanner.prototype, \"scan\", null);\n    __decorate([\n        Cordova(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String, Object]),\n        __metadata(\"design:returntype\", Promise)\n    ], BarcodeScanner.prototype, \"encode\", null);\n    BarcodeScanner = __decorate([\n        Plugin({\n            pluginName: 'BarcodeScanner',\n            plugin: 'phonegap-plugin-barcodescanner',\n            pluginRef: 'cordova.plugins.barcodeScanner',\n            repo: 'https://github.com/phonegap/phonegap-plugin-barcodescanner',\n            platforms: ['Android', 'BlackBerry 10', 'Browser', 'iOS', 'Windows']\n        })\n    ], BarcodeScanner);\n    return BarcodeScanner;\n}(IonicNativePlugin));\nexport { BarcodeScanner };\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ionic-native/barcode-scanner/index.js\n// module id = 291\n// module chunks = 0","import { BarcodeScanner, BarcodeScannerOptions } from '@ionic-native/barcode-scanner';\r\nimport { Component } from '@angular/core';\r\nimport { IonicPage, NavController, NavParams, ToastController } from 'ionic-angular';\r\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { ShoppingListPage } from '../shopping-list/shopping-list';\r\nimport { AndroidPermissions } from '@ionic-native/android-permissions';\r\n\r\n\r\n@IonicPage()\r\n@Component({\r\n    selector: 'page-add-new-item',\r\n    templateUrl: 'add-new-item.html'\r\n})\r\nexport class AddNewItemPage {\r\n\r\n\r\n\r\n    // Define FormGroup property for managing form validation / data retrieval\r\n    public form: FormGroup;\r\n\r\n    //Model for managing fields\r\n    // public custID         : any;\r\n    public productName: any;\r\n    public productQuantity: any;\r\n    public productPrice: any;\r\n    public bCode: any;\r\n    public uName: string;\r\n    //public dataChecked:string=\"False\";\r\n\r\n    // Flag to be used for checking whether we are adding/editing an entry\r\n    public isEdited: boolean = false;\r\n\r\n    //Flag to hide the form upon successful completion of remote operation\r\n    public hideForm: boolean = false;\r\n\r\n    //Property to help set the page title\r\n    public pageTitle: string;\r\n\r\n\r\n    //Property to store the recordID for when an existing entry is being edited\r\n    public recordID: any = null;\r\n\r\n    //Remote URI for retrieving data from and sending data to\r\n    private baseURI: string = \"http://ec2-34-244-210-200.eu-west-1.compute.amazonaws.com/\";\r\n    //private URL : String = \"http://ec2-34-244-210-200.eu-west-1.compute.amazonaws.com/slimapp/public/index.php/api/shoppingListEntry\";\r\n    //private baseURI2   : string = \"http://127.0.0.1/\";\r\n\r\n    options: BarcodeScannerOptions;\r\n    results: {};\r\n\r\n    // result of barcode scan\r\n    //public products : Array<any> =[];\r\n    public products: any[] = [];\r\n    public selectedProduct: any;\r\n    public productFound: boolean = false;\r\n\r\n    // Initialise module classes\r\n    constructor(private barcodeScanner: BarcodeScanner,\r\n        public navCtrl: NavController,\r\n        public navParams: NavParams,\r\n        public http: HttpClient,\r\n        public NP: NavParams,\r\n        public fb: FormBuilder,\r\n        public androidPermissions: AndroidPermissions,\r\n        public toastCtrl: ToastController) {\r\n\r\n            this.uName = this.navParams.get('data');\r\n            console.log(this.uName);\r\n            console.log(this.navParams.data)\r\n\r\n        // Create form builder validation rules\r\n        this.form = fb.group({\r\n            \"ProductName\": [\"\", Validators.required],\r\n            \"ProductQuantity\": ['', Validators.compose([Validators.required,\r\n            Validators.pattern('[1,2,3,4,5,6,7,8,9,10,11]'), Validators.minLength(1), Validators.maxLength(8)])],\r\n            \"ProductPrice\": ['', Validators.compose([Validators.required,\r\n            Validators.minLength(1), Validators.maxLength(8)])]\r\n        });\r\n    }\r\n\r\n    checkCameraPermissions() {\r\n        this.androidPermissions.checkPermission(this.androidPermissions.PERMISSION.CAMERA).then(\r\n          success => { alert('Permission granted'); this.scan()},\r\n          err => { alert('asking for permisison'); this.androidPermissions.requestPermission(this.androidPermissions.PERMISSION.CAMERA) }\r\n        );\r\n      }\r\n    \r\n // get product from barcode after scanning \r\n getData(bCode) {\r\n\r\n    let\r\n        url: any = this.baseURI + \"retrieve-productsAWS.php\";\r\n    this.http.get(url)\r\n        .subscribe((data: any) => {\r\n            this.selectedProduct = {};\r\n            // If the request was successful notify the user\r\n            this.products = data;\r\n            this.productFound = true;\r\n            this.sendNotification(`Product Found`);\r\n            this.selectedProduct = this.products.find(products => products.BarcodeNo === bCode);\r\n            console.log(this.selectedProduct);\r\n            this.addItem(this.selectedProduct);\r\n        },\r\n            (error: any) => {\r\n                console.log(bCode);\r\n                console.log(error);\r\n                this.sendNotification('Something went wrong!');\r\n            });\r\n}\r\n\r\n\r\nscan() {\r\n    //this.selectedProduct={};\r\n    this.barcodeScanner.scan().then((barcodeData) => {\r\n        this.selectedProduct = this.getData(barcodeData.text);\r\n    }, (err) => {\r\n        console.dir(err);\r\n    })\r\n}\r\n\r\n    /**\r\n     * Triggered when template view is about to be entered\r\n     * Determine whether we adding or editing a record\r\n     * based on any supplied navigation parameters\r\n     */\r\n    ionViewWillEnter(): void {\r\n        this.resetFields();\r\n        //this.loadProducts();\r\n        if (this.NP.get(\"record\")) {\r\n            this.isEdited = true;\r\n            this.selectEntry(this.NP.get(\"record\"));\r\n            this.pageTitle = 'Amend entry';\r\n        }\r\n        else {\r\n            this.isEdited = false;\r\n            this.pageTitle = 'Create Entry';\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    /**\r\n     * Assign the navigation retrieved data to properties\r\n     * used as models on the page's HTML form\r\n     *\r\n     */\r\n    selectEntry(item: any): void {\r\n        this.recordID = item.CustomerID;\r\n        this.productName = item.ProductName;\r\n        this.productQuantity = item.ProductQuantity;\r\n        this.productPrice = item.ProductPrice;\r\n        this.uName = item.uName;\r\n    }\r\n\r\n    addItem(item: any): void {\r\n        // this.recordID = item.CustomerID;\r\n        this.productName = item.ProductName;\r\n        this.productQuantity = 1;\r\n        this.productPrice = item.ProductPrice;\r\n        //this.dataChecked = this.dataChecked;\r\n        //this.uName=this.uName;\r\n    \r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    /**\r\n     * Save a new record that has been added to the page's HTML form\r\n     * Use angular's http post method to submit the record data\r\n     *\r\n     */\r\n    createEntry(ProductName: string, ProductQuantity: number, ProductPrice: number, uName): void {\r\n        let headers: any = new HttpHeaders({ 'Content-Type': 'application/json' }),\r\n            options: any = { \"key\": \"create\", \"ProductName\": ProductName, \"ProductQuantity\": ProductQuantity, \"ProductPrice\": ProductPrice, \"uName\": uName },\r\n            url: any = this.baseURI + \"manage-dataAWS.php\";\r\n        // url       : any      \t= this.URL + \"/add\";\r\n\r\n        this.http.post(url, JSON.stringify(options), headers)\r\n            .subscribe((data: any) => {\r\n                // If the request was successful notify the user\r\n                this.hideForm = true;\r\n                this.sendNotification(`${ProductName} was added`);\r\n                this.navCtrl.push('ShoppingListPage', {\r\n                    data: this.uName\r\n                  }); \r\n            },\r\n                (error: any) => {\r\n                    console.dir(error);\r\n                    this.sendNotification('Something went wrong!');\r\n                });\r\n    }\r\n\r\n\r\n\r\n\r\n    /**\r\n     * Update an existing record that has been edited in the page's HTML form\r\n     * Use angular's http post method to submit the record data\r\n     * to our remote PHP script\r\n     *\r\n     */\r\n    updateEntry(ProductName: string, ProductQuantity: number, ProductPrice: number, dataChecked: string, uName:string): void {\r\n        let headers: any = new HttpHeaders({ 'Content-Type': 'application/json' }),\r\n            options: any = { \"key\": \"update\", \"ProductName\": ProductName, \"ProductQuantity\": ProductQuantity, \"ProductPrice\": ProductPrice, \"dataChecked\": dataChecked, \"recordID\": this.recordID },\r\n            url: any = this.baseURI + \"manage-dataAWS.php\";\r\n\r\n        this.http\r\n            .post(url, JSON.stringify(options), headers)\r\n            .subscribe(data => {\r\n                // If the request was successful notify the user\r\n                this.hideForm = true;\r\n                console.log(this.uName);\r\n                this.sendNotification(`${ProductName} was updated`);\r\n                //this.navCtrl.pop();\r\n                this.navCtrl.push('ShoppingListPage', {\r\n                    data: uName\r\n                  });\r\n            },\r\n                (error: any) => {\r\n                    console.log(error);\r\n                    this.sendNotification('Something went wrong!');\r\n                });\r\n    }\r\n\r\n\r\n\r\n\r\n    /**\r\n     * Remove an existing record that has been selected in the page's HTML form\r\n     * Use angular's http post method to submit the record data\r\n     * to our remote PHP script\r\n     *\r\n     */\r\n    deleteEntry(): void {\r\n        let name: string = this.form.controls[\"ProductName\"].value,\r\n            headers: any = new HttpHeaders({ 'Content-Type': 'application/json' }),\r\n            options: any = { \"key\": \"delete\", \"recordID\": this.recordID },\r\n            url: any = this.baseURI + \"manage-dataAWS.php\";\r\n\r\n        this.http\r\n            .post(url, JSON.stringify(options), headers)\r\n            .subscribe(data => {\r\n                this.hideForm = true;\r\n                this.sendNotification(`${name} was deleted`);\r\n                this.navCtrl.push('ShoppingListPage', {\r\n                    data: this.uName\r\n                  });\r\n            },\r\n                (error: any) => {\r\n                    this.sendNotification('Something went wrong!');\r\n                });\r\n    }\r\n\r\n\r\n\r\n\r\n    /**\r\n     * Handle data submitted from the page's HTML form\r\n     * Determine whether we are adding a new record or amending an\r\n     * existing record\r\n     */\r\n    saveEntry(): void {\r\n        let\r\n            prodName: string = this.form.controls[\"ProductName\"].value,\r\n            prodQuantity: number = this.form.controls[\"ProductQuantity\"].value,\r\n            prodPrice: number = this.form.controls[\"ProductPrice\"].value,\r\n            dataChecked: string = \"False\",\r\n            uName: string = this.uName;\r\n\r\n        if (this.isEdited) {\r\n            this.updateEntry(prodName, prodQuantity, prodPrice, dataChecked, uName);\r\n        }\r\n        else {\r\n            this.createEntry(prodName, prodQuantity, prodPrice, this.uName);\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    /**\r\n     * Clear values in the page's HTML form fields\r\n     *\r\n     */\r\n    resetFields(): void {\r\n        //this.custID           = \"\";\r\n        this.productName = \"\";\r\n        this.productQuantity = \" \";\r\n        this.productPrice = \" \";\r\n    }\r\n\r\n\r\n\r\n\r\n    /**\r\n     * Manage notifying the user of the outcome of remote operations\r\n     *\r\n     */\r\n    sendNotification(message: string): void {\r\n        let notification = this.toastCtrl.create({\r\n            message: message,\r\n            duration: 3000\r\n        });\r\n        notification.present();\r\n    }\r\n\r\n    ionViewDidLoad() {\r\n        console.log('ionViewDidLoad ShoppingListPage');\r\n    }\r\n\r\n\r\n\r\n   \r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/add-new-item/add-new-item.ts","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Plugin, Cordova, IonicNativePlugin } from '@ionic-native/core';\nimport { Injectable } from '@angular/core';\n/**\n * @name Android Permissions\n * @description\n * This plugin is designed to support Android new permissions checking mechanism.\n *\n * You can find all permissions here: https://developer.android.com/reference/android/Manifest.permission.html\n *\n * @usage\n * ```\n * import { AndroidPermissions } from '@ionic-native/android-permissions';\n *\n *\n * constructor(private androidPermissions: AndroidPermissions) { }\n *\n * ...\n *\n * this.androidPermissions.checkPermission(this.androidPermissions.PERMISSION.CAMERA).then(\n *   result => console.log('Has permission?',result.hasPermission),\n *   err => this.androidPermissions.requestPermission(this.androidPermissions.PERMISSION.CAMERA)\n * );\n *\n * this.androidPermissions.requestPermissions([this.androidPermissions.PERMISSION.CAMERA, this.androidPermissions.PERMISSION.GET_ACCOUNTS]);\n *\n * ```\n *\n * Android 26 and above: due to Android 26's changes to permissions handling (permissions are requested at time of use rather than at runtime,) if your app does not include any functions (eg. other Ionic Native plugins) that utilize a particular permission, then `requestPermission()` and `requestPermissions()` will resolve immediately with no prompt shown to the user.  Thus, you must include a function utilizing the feature you would like to use before requesting permission for it.\n */\nvar AndroidPermissions = (function (_super) {\n    __extends(AndroidPermissions, _super);\n    function AndroidPermissions() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.PERMISSION = {\n            ACCESS_CHECKIN_PROPERTIES: 'android.permission.ACCESS_CHECKIN_PROPERTIES',\n            ACCESS_COARSE_LOCATION: 'android.permission.ACCESS_COARSE_LOCATION',\n            ACCESS_FINE_LOCATION: 'android.permission.ACCESS_FINE_LOCATION',\n            ACCESS_LOCATION_EXTRA_COMMANDS: 'android.permission.ACCESS_LOCATION_EXTRA_COMMANDS',\n            ACCESS_MOCK_LOCATION: 'android.permission.ACCESS_MOCK_LOCATION',\n            ACCESS_NETWORK_STATE: 'android.permission.ACCESS_NETWORK_STATE',\n            ACCESS_SURFACE_FLINGER: 'android.permission.ACCESS_SURFACE_FLINGER',\n            ACCESS_WIFI_STATE: 'android.permission.ACCESS_WIFI_STATE',\n            ACCOUNT_MANAGER: 'android.permission.ACCOUNT_MANAGER',\n            ADD_VOICEMAIL: 'com.android.voicemail.permission.ADD_VOICEMAIL',\n            AUTHENTICATE_ACCOUNTS: 'android.permission.AUTHENTICATE_ACCOUNTS',\n            BATTERY_STATS: 'android.permission.BATTERY_STATS',\n            BIND_ACCESSIBILITY_SERVICE: 'android.permission.BIND_ACCESSIBILITY_SERVICE',\n            BIND_APPWIDGET: 'android.permission.BIND_APPWIDGET',\n            BIND_CARRIER_MESSAGING_SERVICE: 'android.permission.BIND_CARRIER_MESSAGING_SERVICE',\n            BIND_DEVICE_ADMIN: 'android.permission.BIND_DEVICE_ADMIN',\n            BIND_DREAM_SERVICE: 'android.permission.BIND_DREAM_SERVICE',\n            BIND_INPUT_METHOD: 'android.permission.BIND_INPUT_METHOD',\n            BIND_NFC_SERVICE: 'android.permission.BIND_NFC_SERVICE',\n            BIND_NOTIFICATION_LISTENER_SERVICE: 'android.permission.BIND_NOTIFICATION_LISTENER_SERVICE',\n            BIND_PRINT_SERVICE: 'android.permission.BIND_PRINT_SERVICE',\n            BIND_REMOTEVIEWS: 'android.permission.BIND_REMOTEVIEWS',\n            BIND_TEXT_SERVICE: 'android.permission.BIND_TEXT_SERVICE',\n            BIND_TV_INPUT: 'android.permission.BIND_TV_INPUT',\n            BIND_VOICE_INTERACTION: 'android.permission.BIND_VOICE_INTERACTION',\n            BIND_VPN_SERVICE: 'android.permission.BIND_VPN_SERVICE',\n            BIND_WALLPAPER: 'android.permission.BIND_WALLPAPER',\n            BLUETOOTH: 'android.permission.BLUETOOTH',\n            BLUETOOTH_ADMIN: 'android.permission.BLUETOOTH_ADMIN',\n            BLUETOOTH_PRIVILEGED: 'android.permission.BLUETOOTH_PRIVILEGED',\n            BODY_SENSORS: 'android.permission.BODY_SENSORS',\n            BRICK: 'android.permission.BRICK',\n            BROADCAST_PACKAGE_REMOVED: 'android.permission.BROADCAST_PACKAGE_REMOVED',\n            BROADCAST_SMS: 'android.permission.BROADCAST_SMS',\n            BROADCAST_STICKY: 'android.permission.BROADCAST_STICKY',\n            BROADCAST_WAP_PUSH: 'android.permission.BROADCAST_WAP_PUSH',\n            CALL_PHONE: 'android.permission.CALL_PHONE',\n            CALL_PRIVILEGED: 'android.permission.CALL_PRIVILEGED',\n            CAMERA: 'android.permission.CAMERA',\n            CAPTURE_AUDIO_OUTPUT: 'android.permission.CAPTURE_AUDIO_OUTPUT',\n            CAPTURE_SECURE_VIDEO_OUTPUT: 'android.permission.CAPTURE_SECURE_VIDEO_OUTPUT',\n            CAPTURE_VIDEO_OUTPUT: 'android.permission.CAPTURE_VIDEO_OUTPUT',\n            CHANGE_COMPONENT_ENABLED_STATE: 'android.permission.CHANGE_COMPONENT_ENABLED_STATE',\n            CHANGE_CONFIGURATION: 'android.permission.CHANGE_CONFIGURATION',\n            CHANGE_NETWORK_STATE: 'android.permission.CHANGE_NETWORK_STATE',\n            CHANGE_WIFI_MULTICAST_STATE: 'android.permission.CHANGE_WIFI_MULTICAST_STATE',\n            CHANGE_WIFI_STATE: 'android.permission.CHANGE_WIFI_STATE',\n            CLEAR_APP_CACHE: 'android.permission.CLEAR_APP_CACHE',\n            CLEAR_APP_USER_DATA: 'android.permission.CLEAR_APP_USER_DATA',\n            CONTROL_LOCATION_UPDATES: 'android.permission.CONTROL_LOCATION_UPDATES',\n            DELETE_CACHE_FILES: 'android.permission.DELETE_CACHE_FILES',\n            DELETE_PACKAGES: 'android.permission.DELETE_PACKAGES',\n            DEVICE_POWER: 'android.permission.DEVICE_POWER',\n            DIAGNOSTIC: 'android.permission.DIAGNOSTIC',\n            DISABLE_KEYGUARD: 'android.permission.DISABLE_KEYGUARD',\n            DUMP: 'android.permission.DUMP',\n            EXPAND_STATUS_BAR: 'android.permission.EXPAND_STATUS_BAR',\n            FACTORY_TEST: 'android.permission.FACTORY_TEST',\n            FLASHLIGHT: 'android.permission.FLASHLIGHT',\n            FORCE_BACK: 'android.permission.FORCE_BACK',\n            GET_ACCOUNTS: 'android.permission.GET_ACCOUNTS',\n            GET_PACKAGE_SIZE: 'android.permission.GET_PACKAGE_SIZE',\n            GET_TASKS: 'android.permission.GET_TASKS',\n            GET_TOP_ACTIVITY_INFO: 'android.permission.GET_TOP_ACTIVITY_INFO',\n            GLOBAL_SEARCH: 'android.permission.GLOBAL_SEARCH',\n            HARDWARE_TEST: 'android.permission.HARDWARE_TEST',\n            INJECT_EVENTS: 'android.permission.INJECT_EVENTS',\n            INSTALL_LOCATION_PROVIDER: 'android.permission.INSTALL_LOCATION_PROVIDER',\n            INSTALL_PACKAGES: 'android.permission.INSTALL_PACKAGES',\n            INSTALL_SHORTCUT: 'com.android.launcher.permission.INSTALL_SHORTCUT',\n            INTERNAL_SYSTEM_WINDOW: 'android.permission.INTERNAL_SYSTEM_WINDOW',\n            INTERNET: 'android.permission.INTERNET',\n            KILL_BACKGROUND_PROCESSES: 'android.permission.KILL_BACKGROUND_PROCESSES',\n            LOCATION_HARDWARE: 'android.permission.LOCATION_HARDWARE',\n            MANAGE_ACCOUNTS: 'android.permission.MANAGE_ACCOUNTS',\n            MANAGE_APP_TOKENS: 'android.permission.MANAGE_APP_TOKENS',\n            MANAGE_DOCUMENTS: 'android.permission.MANAGE_DOCUMENTS',\n            MASTER_CLEAR: 'android.permission.MASTER_CLEAR',\n            MEDIA_CONTENT_CONTROL: 'android.permission.MEDIA_CONTENT_CONTROL',\n            MODIFY_AUDIO_SETTINGS: 'android.permission.MODIFY_AUDIO_SETTINGS',\n            MODIFY_PHONE_STATE: 'android.permission.MODIFY_PHONE_STATE',\n            MOUNT_FORMAT_FILESYSTEMS: 'android.permission.MOUNT_FORMAT_FILESYSTEMS',\n            MOUNT_UNMOUNT_FILESYSTEMS: 'android.permission.MOUNT_UNMOUNT_FILESYSTEMS',\n            NFC: 'android.permission.NFC',\n            PERSISTENT_ACTIVITY: 'android.permission.PERSISTENT_ACTIVITY',\n            PROCESS_OUTGOING_CALLS: 'android.permission.PROCESS_OUTGOING_CALLS',\n            READ_CALENDAR: 'android.permission.READ_CALENDAR',\n            READ_CALL_LOG: 'android.permission.READ_CALL_LOG',\n            READ_CONTACTS: 'android.permission.READ_CONTACTS',\n            READ_EXTERNAL_STORAGE: 'android.permission.READ_EXTERNAL_STORAGE',\n            READ_FRAME_BUFFER: 'android.permission.READ_FRAME_BUFFER',\n            READ_HISTORY_BOOKMARKS: 'com.android.browser.permission.READ_HISTORY_BOOKMARKS',\n            READ_INPUT_STATE: 'android.permission.READ_INPUT_STATE',\n            READ_LOGS: 'android.permission.READ_LOGS',\n            READ_PHONE_STATE: 'android.permission.READ_PHONE_STATE',\n            READ_PROFILE: 'android.permission.READ_PROFILE',\n            READ_SMS: 'android.permission.READ_SMS',\n            READ_SOCIAL_STREAM: 'android.permission.READ_SOCIAL_STREAM',\n            READ_SYNC_SETTINGS: 'android.permission.READ_SYNC_SETTINGS',\n            READ_SYNC_STATS: 'android.permission.READ_SYNC_STATS',\n            READ_USER_DICTIONARY: 'android.permission.READ_USER_DICTIONARY',\n            READ_VOICEMAIL: 'com.android.voicemail.permission.READ_VOICEMAIL',\n            REBOOT: 'android.permission.REBOOT',\n            RECEIVE_BOOT_COMPLETED: 'android.permission.RECEIVE_BOOT_COMPLETED',\n            RECEIVE_MMS: 'android.permission.RECEIVE_MMS',\n            RECEIVE_SMS: 'android.permission.RECEIVE_SMS',\n            RECEIVE_WAP_PUSH: 'android.permission.RECEIVE_WAP_PUSH',\n            RECORD_AUDIO: 'android.permission.RECORD_AUDIO',\n            REORDER_TASKS: 'android.permission.REORDER_TASKS',\n            RESTART_PACKAGES: 'android.permission.RESTART_PACKAGES',\n            SEND_RESPOND_VIA_MESSAGE: 'android.permission.SEND_RESPOND_VIA_MESSAGE',\n            SEND_SMS: 'android.permission.SEND_SMS',\n            SET_ACTIVITY_WATCHER: 'android.permission.SET_ACTIVITY_WATCHER',\n            SET_ALARM: 'com.android.alarm.permission.SET_ALARM',\n            SET_ALWAYS_FINISH: 'android.permission.SET_ALWAYS_FINISH',\n            SET_ANIMATION_SCALE: 'android.permission.SET_ANIMATION_SCALE',\n            SET_DEBUG_APP: 'android.permission.SET_DEBUG_APP',\n            SET_ORIENTATION: 'android.permission.SET_ORIENTATION',\n            SET_POINTER_SPEED: 'android.permission.SET_POINTER_SPEED',\n            SET_PREFERRED_APPLICATIONS: 'android.permission.SET_PREFERRED_APPLICATIONS',\n            SET_PROCESS_LIMIT: 'android.permission.SET_PROCESS_LIMIT',\n            SET_TIME: 'android.permission.SET_TIME',\n            SET_TIME_ZONE: 'android.permission.SET_TIME_ZONE',\n            SET_WALLPAPER: 'android.permission.SET_WALLPAPER',\n            SET_WALLPAPER_HINTS: 'android.permission.SET_WALLPAPER_HINTS',\n            SIGNAL_PERSISTENT_PROCESSES: 'android.permission.SIGNAL_PERSISTENT_PROCESSES',\n            STATUS_BAR: 'android.permission.STATUS_BAR',\n            SUBSCRIBED_FEEDS_READ: 'android.permission.SUBSCRIBED_FEEDS_READ',\n            SUBSCRIBED_FEEDS_WRITE: 'android.permission.SUBSCRIBED_FEEDS_WRITE',\n            SYSTEM_ALERT_WINDOW: 'android.permission.SYSTEM_ALERT_WINDOW',\n            TRANSMIT_IR: 'android.permission.TRANSMIT_IR',\n            UNINSTALL_SHORTCUT: 'com.android.launcher.permission.UNINSTALL_SHORTCUT',\n            UPDATE_DEVICE_STATS: 'android.permission.UPDATE_DEVICE_STATS',\n            USE_CREDENTIALS: 'android.permission.USE_CREDENTIALS',\n            USE_SIP: 'android.permission.USE_SIP',\n            VIBRATE: 'android.permission.VIBRATE',\n            WAKE_LOCK: 'android.permission.WAKE_LOCK',\n            WRITE_APN_SETTINGS: 'android.permission.WRITE_APN_SETTINGS',\n            WRITE_CALENDAR: 'android.permission.WRITE_CALENDAR',\n            WRITE_CALL_LOG: 'android.permission.WRITE_CALL_LOG',\n            WRITE_CONTACTS: 'android.permission.WRITE_CONTACTS',\n            WRITE_EXTERNAL_STORAGE: 'android.permission.WRITE_EXTERNAL_STORAGE',\n            WRITE_GSERVICES: 'android.permission.WRITE_GSERVICES',\n            WRITE_HISTORY_BOOKMARKS: 'com.android.browser.permission.WRITE_HISTORY_BOOKMARKS',\n            WRITE_PROFILE: 'android.permission.WRITE_PROFILE',\n            WRITE_SECURE_SETTINGS: 'android.permission.WRITE_SECURE_SETTINGS',\n            WRITE_SETTINGS: 'android.permission.WRITE_SETTINGS',\n            WRITE_SMS: 'android.permission.WRITE_SMS',\n            WRITE_SOCIAL_STREAM: 'android.permission.WRITE_SOCIAL_STREAM',\n            WRITE_SYNC_SETTINGS: 'android.permission.WRITE_SYNC_SETTINGS',\n            WRITE_USER_DICTIONARY: 'android.permission.WRITE_USER_DICTIONARY',\n            WRITE_VOICEMAIL: 'com.android.voicemail.permission.WRITE_VOICEMAIL',\n        };\n        return _this;\n    }\n    /**\n     * Check permission\n     * @param permission {string} The name of the permission\n     * @return {Promise<any>} Returns a promise\n     */\n    AndroidPermissions.prototype.checkPermission = function (permission) { return; };\n    /**\n     * Request permission\n     * @param permission {string} The name of the permission to request\n     * @return {Promise<any>}\n     */\n    AndroidPermissions.prototype.requestPermission = function (permission) { return; };\n    /**\n     * Request permissions\n     * @param permissions {Array<string>} An array with permissions\n     * @return {Promise<any>} Returns a promise\n     */\n    AndroidPermissions.prototype.requestPermissions = function (permissions) { return; };\n    /**\n     * This function still works now, will not support in the future.\n     * @param permission {string} The name of the permission\n     * @return {Promise<any>} Returns a promise\n     */\n    AndroidPermissions.prototype.hasPermission = function (permission) { return; };\n    AndroidPermissions.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    AndroidPermissions.ctorParameters = function () { return []; };\n    __decorate([\n        Cordova(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String]),\n        __metadata(\"design:returntype\", Promise)\n    ], AndroidPermissions.prototype, \"checkPermission\", null);\n    __decorate([\n        Cordova(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String]),\n        __metadata(\"design:returntype\", Promise)\n    ], AndroidPermissions.prototype, \"requestPermission\", null);\n    __decorate([\n        Cordova(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Array]),\n        __metadata(\"design:returntype\", Promise)\n    ], AndroidPermissions.prototype, \"requestPermissions\", null);\n    __decorate([\n        Cordova(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String]),\n        __metadata(\"design:returntype\", Promise)\n    ], AndroidPermissions.prototype, \"hasPermission\", null);\n    AndroidPermissions = __decorate([\n        Plugin({\n            pluginName: 'AndroidPermissions',\n            plugin: 'cordova-plugin-android-permissions',\n            pluginRef: 'cordova.plugins.permissions',\n            repo: 'https://github.com/NeoLSN/cordova-plugin-android-permissions',\n            platforms: ['Android']\n        })\n    ], AndroidPermissions);\n    return AndroidPermissions;\n}(IonicNativePlugin));\nexport { AndroidPermissions };\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ionic-native/android-permissions/index.js\n// module id = 293\n// module chunks = 0"],"sourceRoot":""}