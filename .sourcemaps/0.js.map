{"version":3,"sources":["../../src/pages/add-new-item/add-new-item.module.ts","../../node_modules/@ionic-native/barcode-scanner/index.js","../../src/pages/add-new-item/add-new-item.ts"],"names":[],"mappings":"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","file":"0.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { AddNewItemPage } from './add-new-item';\nimport { BarcodeScanner } from '@ionic-native/barcode-scanner';\n\n@NgModule({\n  declarations: [\n    AddNewItemPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(AddNewItemPage),\n  ],\n  providers: [\n    BarcodeScanner\n  ]\n})\nexport class AddNewItemPageModule {}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/add-new-item/add-new-item.module.ts","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Injectable } from '@angular/core';\nimport { Cordova, Plugin, IonicNativePlugin } from '@ionic-native/core';\n/**\n * @name Barcode Scanner\n * @description\n * The Barcode Scanner Plugin opens a camera view and automatically scans a barcode, returning the data back to you.\n *\n * Requires Cordova plugin: `phonegap-plugin-barcodescanner`. For more info, please see the [BarcodeScanner plugin docs](https://github.com/phonegap/phonegap-plugin-barcodescanner).\n *\n * @usage\n * ```typescript\n * import { BarcodeScanner } from '@ionic-native/barcode-scanner';\n *\n * constructor(private barcodeScanner: BarcodeScanner) { }\n *\n * ...\n *\n *\n * this.barcodeScanner.scan().then((barcodeData) => {\n *  // Success! Barcode data is here\n * }, (err) => {\n * \t// An error occurred\n * });\n * ```\n * @interfaces\n * BarcodeScannerOptions\n * BarcodeScanResult\n */\nvar BarcodeScanner = (function (_super) {\n    __extends(BarcodeScanner, _super);\n    function BarcodeScanner() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.Encode = {\n            TEXT_TYPE: 'TEXT_TYPE',\n            EMAIL_TYPE: 'EMAIL_TYPE',\n            PHONE_TYPE: 'PHONE_TYPE',\n            SMS_TYPE: 'SMS_TYPE'\n        };\n        return _this;\n    }\n    /**\n     * Open the barcode scanner.\n     * @param options {BarcodeScannerOptions} Optional options to pass to the scanner\n     * @returns {Promise<any>} Returns a Promise that resolves with scanner data, or rejects with an error.\n     */\n    BarcodeScanner.prototype.scan = function (options) { return; };\n    /**\n     * Encodes data into a barcode.\n     * NOTE: not well supported on Android\n     * @param type {string} Type of encoding\n     * @param data {any} Data to encode\n     * @returns {Promise<any>}\n     */\n    BarcodeScanner.prototype.encode = function (type, data) { return; };\n    BarcodeScanner.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    BarcodeScanner.ctorParameters = function () { return []; };\n    __decorate([\n        Cordova({\n            callbackOrder: 'reverse'\n        }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", Promise)\n    ], BarcodeScanner.prototype, \"scan\", null);\n    __decorate([\n        Cordova(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String, Object]),\n        __metadata(\"design:returntype\", Promise)\n    ], BarcodeScanner.prototype, \"encode\", null);\n    BarcodeScanner = __decorate([\n        Plugin({\n            pluginName: 'BarcodeScanner',\n            plugin: 'phonegap-plugin-barcodescanner',\n            pluginRef: 'cordova.plugins.barcodeScanner',\n            repo: 'https://github.com/phonegap/phonegap-plugin-barcodescanner',\n            platforms: ['Android', 'BlackBerry 10', 'Browser', 'iOS', 'Windows']\n        })\n    ], BarcodeScanner);\n    return BarcodeScanner;\n}(IonicNativePlugin));\nexport { BarcodeScanner };\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ionic-native/barcode-scanner/index.js\n// module id = 285\n// module chunks = 0","import {BarcodeScanner, BarcodeScannerOptions} from '@ionic-native/barcode-scanner';\r\nimport { Component } from '@angular/core';\r\nimport { IonicPage, NavController, NavParams, ToastController } from 'ionic-angular';\r\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\n\r\n@IonicPage()\r\n@Component({\r\n  selector: 'page-add-new-item',\r\n  templateUrl: 'add-new-item.html'\r\n})\r\nexport class AddNewItemPage {\r\n\r\n\r\n\r\n   // Define FormGroup property for managing form validation / data retrieval\r\n   public form : FormGroup;\r\n\r\n   //Model for managing fields\r\n   // public custID         : any;\r\n    public productName : any;\r\n    public productQuantity : any;\r\n    public productPrice : any;\r\n    public bCode: any;\r\n\r\n    // Flag to be used for checking whether we are adding/editing an entry\r\n    public isEdited : boolean = false; \r\n\r\n   //Flag to hide the form upon successful completion of remote operation\r\n   public hideForm : boolean = false;\r\n\r\n   //Property to help set the page title\r\n   public pageTitle : string;\r\n\r\n\r\n   //Property to store the recordID for when an existing entry is being edited\r\n   public recordID : any      = null;\r\n\r\n   //Remote URI for retrieving data from and sending data to\r\n   private baseURI : string  = \"http://ec2-34-244-210-200.eu-west-1.compute.amazonaws.com/\";\r\n   //private URL : String = \"http://ec2-34-244-210-200.eu-west-1.compute.amazonaws.com/slimapp/public/index.php/api/shoppingListEntry\";\r\n   //private baseURI2   : string = \"http://127.0.0.1/\";\r\n\r\n    options: BarcodeScannerOptions;\r\n    results: {};\r\n    \r\n     // result of barcode scan\r\n     //public products : Array<any> =[];\r\n     public products : any[] = [];\r\n     public selectedProduct : any;\r\n     public productFound : boolean = false;\r\n\r\n   // Initialise module classes\r\n   constructor(private barcodeScanner: BarcodeScanner,\r\n               public navCtrl : NavController,\r\n               public http : HttpClient,\r\n               public NP : NavParams,\r\n               public fb : FormBuilder,\r\n               public toastCtrl : ToastController)\r\n   {\r\n\r\n    \r\n\r\n      // Create form builder validation rules\r\n      this.form = fb.group({\r\n         \"ProductName\" : [\"\", Validators.required],\r\n         \"ProductQuantity\" : ['', Validators.compose([Validators.required, \r\n            Validators.pattern('[1,2,3,4,5,6,7,8,9,10,11]'), Validators.minLength(1), Validators.maxLength(8)])],\r\n         \"ProductPrice\" : ['', Validators.compose([Validators.required, \r\n            Validators.pattern('^\\\\d+\\\\.\\\\d{2}$'), Validators.minLength(1), Validators.maxLength(8)])]\r\n      });\r\n   }\r\n      \r\n\r\n\r\n\r\n   /**\r\n    * Triggered when template view is about to be entered\r\n    * Determine whether we adding or editing a record\r\n    * based on any supplied navigation parameters\r\n    */\r\n   ionViewWillEnter() : void\r\n   {\r\n      this.resetFields();\r\n      //this.loadProducts();\r\n      if(this.NP.get(\"record\"))\r\n      {\r\n         this.isEdited = true;\r\n         this.selectEntry(this.NP.get(\"record\"));\r\n         this.pageTitle = 'Amend entry';\r\n      }\r\n      else\r\n      {\r\n         this.isEdited = false;\r\n         this.pageTitle = 'Create Entry';\r\n      }\r\n   }\r\n\r\n\r\n\r\n\r\n   /**\r\n    * Assign the navigation retrieved data to properties\r\n    * used as models on the page's HTML form\r\n    *\r\n    */\r\n   selectEntry(item : any) : void\r\n   {\r\n      this.recordID = item.CustomerID;\r\n      this.productName = item.ProductName;\r\n      this.productQuantity = item.ProductQuantity;\r\n      this.productPrice = item.ProductPrice;\r\n   }\r\n\r\n   addItem(item : any) : void\r\n   {\r\n     // this.recordID = item.CustomerID;\r\n      this.productName = item.ProductName;\r\n      this.productQuantity = 1;\r\n      this.productPrice = item.ProductPrice;\r\n   }\r\n\r\n\r\n  \r\n\r\n\r\n   /**\r\n    * Save a new record that has been added to the page's HTML form\r\n    * Use angular's http post method to submit the record data\r\n    *\r\n    */\r\n   createEntry(ProductName : string, ProductQuantity : number, ProductPrice: number) : void\r\n   {\r\n      let headers : any = new HttpHeaders({ 'Content-Type': 'application/json' }),\r\n          options : any = { \"key\" : \"create\", \"ProductName\" : ProductName, \"ProductQuantity\" : ProductQuantity, \"ProductPrice\" : ProductPrice },\r\n          url : any = this.baseURI + \"manage-dataAWS.php\";\r\n         // url       : any      \t= this.URL + \"/add\";\r\n\r\n      this.http.post(url, JSON.stringify(options), headers)\r\n      .subscribe((data : any) =>\r\n      {\r\n         // If the request was successful notify the user\r\n         this.hideForm = true;\r\n         this.sendNotification(`Congratulations the item: ${ProductName} was successfully added`);\r\n      },\r\n      (error : any) =>\r\n      {\r\n        console.log(ProductPrice);\r\n        console.log(error);\r\n         this.sendNotification('Something went wrong!');\r\n      });\r\n   }\r\n\r\n\r\n\r\n\r\n   /**\r\n    * Update an existing record that has been edited in the page's HTML form\r\n    * Use angular's http post method to submit the record data\r\n    * to our remote PHP script\r\n    *\r\n    */\r\n   updateEntry(ProductName : string, ProductQuantity : number, ProductPrice: number) : void\r\n   {\r\n      let headers : any = new HttpHeaders({ 'Content-Type': 'application/json' }),\r\n          options : any = { \"key\" : \"update\", \"ProductName\" : ProductName, \"ProductQuantity\" : ProductQuantity, \"ProductPrice\" : ProductPrice, \"recordID\" : this.recordID},\r\n          url : any = this.baseURI + \"manage-dataAWS.php\";\r\n\r\n      this.http\r\n      .post(url, JSON.stringify(options), headers)\r\n      .subscribe(data =>\r\n      {\r\n         // If the request was successful notify the user\r\n         this.hideForm = true;\r\n         this.sendNotification(`Congratulations the technology: ${ProductName} was successfully updated`);\r\n      },\r\n      (error : any) =>\r\n      {\r\n          console.log(error);\r\n         this.sendNotification('Something went wrong!');\r\n      });\r\n   }\r\n\r\n\r\n\r\n\r\n   /**\r\n    * Remove an existing record that has been selected in the page's HTML form\r\n    * Use angular's http post method to submit the record data\r\n    * to our remote PHP script\r\n    *\r\n    */\r\n   deleteEntry() : void\r\n   {\r\n      let name : string = this.form.controls[\"ProductName\"].value,\r\n          headers : any = new HttpHeaders({ 'Content-Type': 'application/json' }),\r\n          options : any\t= { \"key\" : \"delete\", \"recordID\" : this.recordID},\r\n          url : any = this.baseURI + \"manage-dataAWS.php\";\r\n\r\n      this.http\r\n      .post(url, JSON.stringify(options), headers)\r\n      .subscribe(data =>\r\n      {\r\n         this.hideForm = true;\r\n         this.sendNotification(`Congratulations the technology: ${name} was successfully deleted`);\r\n      },\r\n      (error : any) =>\r\n      {\r\n         this.sendNotification('Something went wrong!');\r\n      });\r\n   }\r\n\r\n\r\n\r\n\r\n   /**\r\n    * Handle data submitted from the page's HTML form\r\n    * Determine whether we are adding a new record or amending an\r\n    * existing record\r\n    */\r\n   saveEntry() : void\r\n   {\r\n      let\r\n          prodName : string = this.form.controls[\"ProductName\"].value,\r\n          prodQuantity : number = this.form.controls[\"ProductQuantity\"].value,\r\n          prodPrice : number = this.form.controls[\"ProductPrice\"].value;\r\n\r\n      if(this.isEdited)\r\n      {\r\n         this.updateEntry(prodName, prodQuantity, prodPrice );\r\n      }\r\n      else\r\n      {\r\n         this.createEntry(prodName, prodQuantity, prodPrice );\r\n      }\r\n   }\r\n\r\n\r\n\r\n\r\n   /**\r\n    * Clear values in the page's HTML form fields\r\n    *\r\n    */\r\n   resetFields() : void\r\n   {\r\n      //this.custID           = \"\";\r\n      this.productName    = \"\";\r\n      this.productQuantity           = \" \";\r\n      this.productPrice   = \" \";\r\n   }\r\n\r\n\r\n\r\n\r\n   /**\r\n    * Manage notifying the user of the outcome of remote operations\r\n    *\r\n    */\r\n   sendNotification(message : string)  : void\r\n   {\r\n      let notification = this.toastCtrl.create({\r\n          message       : message,\r\n          duration      : 3000\r\n      });\r\n      notification.present();\r\n   }\r\n   \r\n    ionViewDidLoad() {\r\n      console.log('ionViewDidLoad ShoppingListPage');\r\n    }\r\n    \r\n  \r\n\r\n   // get product from barcode after scanning \r\n   getData(bCode)\r\n   {\r\n\r\n    let\r\n     url : any = this.baseURI+\"retrieve-productsAWS.php\";\r\n    this.http.get(url)\r\n    .subscribe((data : any) =>\r\n    {\r\n        this.selectedProduct={};\r\n        // If the request was successful notify the user\r\n        this.products=data;\r\n        this.productFound=true;\r\n        this.sendNotification(`Product Found`);\r\n        this.selectedProduct=this.products.find(products => products.BarcodeNo === bCode);\r\n        console.log(this.selectedProduct);\r\n        this.addItem(this.selectedProduct);\r\n\r\n        console.log(this.selectedProduct.ProductPrice);\r\n        console.log(this.productPrice);\r\n    },\r\n    (error : any) =>\r\n    {\r\n         console.log(bCode);\r\n        console.log(error);\r\n        this.sendNotification('Something went wrong!');\r\n    });\r\n}\r\n\r\n \r\nscan(){\r\n    //this.selectedProduct={};\r\n      this.barcodeScanner.scan().then((barcodeData) =>{\r\n          this.selectedProduct=this.getData(barcodeData.text);\r\n      }, (err) =>{\r\n          console.dir(err);\r\n      })\r\n   }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/add-new-item/add-new-item.ts"],"sourceRoot":""}