{"version":3,"sources":["../../src/pages/add-new-item/add-new-item.module.ts","../../src/pages/shopping-list/shopping-list.ts","../../node_modules/@ionic-native/barcode-scanner/index.js","../../src/pages/add-new-item/add-new-item.ts"],"names":[],"mappings":"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","file":"0.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { AddNewItemPage } from './add-new-item';\nimport { BarcodeScanner } from '@ionic-native/barcode-scanner';\n\n@NgModule({\n  declarations: [\n    AddNewItemPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(AddNewItemPage),\n  ],\n  providers: [\n    BarcodeScanner\n  ]\n})\nexport class AddNewItemPageModule {}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/add-new-item/add-new-item.module.ts","import { Component } from '@angular/core';\r\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { HomePage } from '../home/home';\r\nimport { CurrencyPipe } from '@angular/common';\r\nimport { isTrueProperty } from 'ionic-angular/util/util';\r\nimport { Storage } from '@ionic/storage';\r\nimport { Injectable } from '@angular/core';\r\n/**\r\n * Generated class for the ShoppngListPage page.\r\n *\r\n * See https://ionicframework.com/docs/components/#navigation for more info on\r\n * Ionic pages and navigation.\r\n */\r\n\r\n@IonicPage()\r\n@Component({\r\n  selector: 'page-shopping-list',\r\n  templateUrl: 'shopping-list.html',\r\n})\r\nexport class ShoppingListPage {\r\n  total: any;\r\n  public dataChecked: string;\r\n  public checked: string;\r\n  public disabled: boolean;\r\n  public itemTotal: any;\r\n  public basketTotal: number = 0.00;\r\n  public grandTotal: any;\r\n  public myColour: String = \"#000066\";\r\n  public quantity: number;\r\n  public price: number;\r\n  public buttonColor: string = 'rgba(0,0,0,0.0)';\r\n  public items: Array<any> = [];\r\n  public username: any;\r\n  public selectedProducts: any;\r\n  private baseURI1: string = \"http://127.0.0.1\"\r\n  private baseURI2: string = \"http://ec2-34-244-210-200.eu-west-1.compute.amazonaws.com\";\r\n\r\n\r\n\r\n  constructor(\r\n    public http: HttpClient,\r\n    public navCtrl: NavController,\r\n    public navParams: NavParams,\r\n    private currencyPipe: CurrencyPipe,\r\n    public storage: Storage\r\n  ) {\r\n    this.username = this.navParams.get('data');\r\n    console.log(this.username);\r\n    //this.load();\r\n    this.loadData();\r\n  }\r\n\r\n  // change double to euros currency\r\n  getCurrency(amount: number) {\r\n    return this.currencyPipe.transform(amount, 'EUR', \"symbol\", '1.2-2');\r\n  }\r\n\r\n \r\n  addItem(){\r\n    this.navCtrl.push('AddNewItemPage', {\r\n      data: this.username\r\n    }); \r\n  } \r\n\r\n  ionViewWillEnter(): void {\r\n    //this.load();\r\n\r\n  }\r\n  // get users shopping list \r\n  loadData() {\r\n\r\n    let\r\n      headers: any = new HttpHeaders({ 'Content-Type': 'application/json' }),\r\n      options: any = { \"key\": \"readData\", \"uName\": this.username },\r\n      url: any = this.baseURI2 + \"/manage-dataAWS.php\";\r\n\r\n    this.http\r\n      .post(url, JSON.stringify(options), headers)\r\n      .subscribe((data: any) => {\r\n\r\n        console.dir(data);\r\n        this.items = data;\r\n\r\n      },\r\n        (error: any) => {\r\n          console.log('Something went wrong!');\r\n        });\r\n  }\r\n\r\n\r\n\r\n  //navigate to add item page to view/edit item\r\n  viewEntry(param: any): void {\r\n    this.navCtrl.push('AddNewItemPage', param);\r\n    this.navCtrl.push('AddNewItemPage', {\r\n      data: this.username\r\n    }); \r\n  }\r\n\r\n  // clear checkbox when item edited\r\n  public checkChanged(e: any, item) {\r\n    let headers: any = new HttpHeaders({ 'Content-Type': 'application/json' }),\r\n      options: any = { \"key\": \"updateCheckfields\", \"ProductName\": item.ProductName, \"dataChecked\": JSON.stringify(e.checked) },\r\n      url: any = this.baseURI2 + \"/manage-dataAWS.php\";\r\n\r\n    this.http.post(url, JSON.stringify(options), headers)\r\n      .subscribe((data: any) => {\r\n        console.log(\"success\");\r\n      },\r\n        (error: any) => {\r\n          console.log(error);\r\n        });\r\n  }\r\n\r\n  // calculate total on check or uncheck\r\n  datachanged(e: any, item) {\r\n\r\n    if (e.checked == true) {\r\n      this.quantity = item.ProductQuantity;\r\n      this.price = item.ProductPrice;\r\n      this.itemTotal = this.quantity * this.price;\r\n      this.basketTotal = this.itemTotal + this.basketTotal;\r\n      this.grandTotal = this.getCurrency(this.basketTotal);\r\n    }\r\n\r\n    if (e.checked == false) {\r\n      //window.localStorage.setItem(e.checked, \"false\");\r\n      this.quantity = item.ProductQuantity;\r\n      this.price = item.ProductPrice;\r\n      this.itemTotal = this.quantity * this.price;\r\n      this.basketTotal = this.basketTotal - this.itemTotal;\r\n      this.grandTotal = this.getCurrency(this.basketTotal);\r\n    }\r\n  }\r\n\r\n  // clear checkfields on database\r\n  clearCheckfields(): void {\r\n    let headers: any = new HttpHeaders({ 'Content-Type': 'application/json' }),\r\n      options: any = { \"key\": \"clearCheckfields\" },\r\n      url: any = this.baseURI2 + \"/manage-dataAWS.php\";\r\n\r\n    this.http.post(url, JSON.stringify(options), headers)\r\n      .subscribe((data: any) => {\r\n        console.log(\"success\");\r\n        this.loadData();\r\n      },\r\n        (error: any) => {\r\n          console.log(\"fail\");\r\n          console.log(error);\r\n        });\r\n  }\r\n\r\n  // reset values and checkfields\r\n  resetList() {\r\n    this.itemTotal = 0;\r\n    this.basketTotal = 0;\r\n    this.grandTotal = this.getCurrency(0.00);\r\n    this.clearCheckfields();\r\n  }\r\n\r\n  // back to login\r\n  goHome() {\r\n    this.resetList();\r\n    this.navCtrl.push(HomePage);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/shopping-list/shopping-list.ts","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Injectable } from '@angular/core';\nimport { Cordova, Plugin, IonicNativePlugin } from '@ionic-native/core';\n/**\n * @name Barcode Scanner\n * @description\n * The Barcode Scanner Plugin opens a camera view and automatically scans a barcode, returning the data back to you.\n *\n * Requires Cordova plugin: `phonegap-plugin-barcodescanner`. For more info, please see the [BarcodeScanner plugin docs](https://github.com/phonegap/phonegap-plugin-barcodescanner).\n *\n * @usage\n * ```typescript\n * import { BarcodeScanner } from '@ionic-native/barcode-scanner';\n *\n * constructor(private barcodeScanner: BarcodeScanner) { }\n *\n * ...\n *\n *\n * this.barcodeScanner.scan().then((barcodeData) => {\n *  // Success! Barcode data is here\n * }, (err) => {\n * \t// An error occurred\n * });\n * ```\n * @interfaces\n * BarcodeScannerOptions\n * BarcodeScanResult\n */\nvar BarcodeScanner = (function (_super) {\n    __extends(BarcodeScanner, _super);\n    function BarcodeScanner() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.Encode = {\n            TEXT_TYPE: 'TEXT_TYPE',\n            EMAIL_TYPE: 'EMAIL_TYPE',\n            PHONE_TYPE: 'PHONE_TYPE',\n            SMS_TYPE: 'SMS_TYPE'\n        };\n        return _this;\n    }\n    /**\n     * Open the barcode scanner.\n     * @param options {BarcodeScannerOptions} Optional options to pass to the scanner\n     * @returns {Promise<any>} Returns a Promise that resolves with scanner data, or rejects with an error.\n     */\n    BarcodeScanner.prototype.scan = function (options) { return; };\n    /**\n     * Encodes data into a barcode.\n     * NOTE: not well supported on Android\n     * @param type {string} Type of encoding\n     * @param data {any} Data to encode\n     * @returns {Promise<any>}\n     */\n    BarcodeScanner.prototype.encode = function (type, data) { return; };\n    BarcodeScanner.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    BarcodeScanner.ctorParameters = function () { return []; };\n    __decorate([\n        Cordova({\n            callbackOrder: 'reverse'\n        }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", Promise)\n    ], BarcodeScanner.prototype, \"scan\", null);\n    __decorate([\n        Cordova(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String, Object]),\n        __metadata(\"design:returntype\", Promise)\n    ], BarcodeScanner.prototype, \"encode\", null);\n    BarcodeScanner = __decorate([\n        Plugin({\n            pluginName: 'BarcodeScanner',\n            plugin: 'phonegap-plugin-barcodescanner',\n            pluginRef: 'cordova.plugins.barcodeScanner',\n            repo: 'https://github.com/phonegap/phonegap-plugin-barcodescanner',\n            platforms: ['Android', 'BlackBerry 10', 'Browser', 'iOS', 'Windows']\n        })\n    ], BarcodeScanner);\n    return BarcodeScanner;\n}(IonicNativePlugin));\nexport { BarcodeScanner };\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ionic-native/barcode-scanner/index.js\n// module id = 289\n// module chunks = 0","import { BarcodeScanner, BarcodeScannerOptions } from '@ionic-native/barcode-scanner';\r\nimport { Component } from '@angular/core';\r\nimport { IonicPage, NavController, NavParams, ToastController } from 'ionic-angular';\r\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { ShoppingListPage } from '../shopping-list/shopping-list';\r\n\r\n\r\n@IonicPage()\r\n@Component({\r\n    selector: 'page-add-new-item',\r\n    templateUrl: 'add-new-item.html'\r\n})\r\nexport class AddNewItemPage {\r\n\r\n\r\n\r\n    // Define FormGroup property for managing form validation / data retrieval\r\n    public form: FormGroup;\r\n\r\n    //Model for managing fields\r\n    // public custID         : any;\r\n    public productName: any;\r\n    public productQuantity: any;\r\n    public productPrice: any;\r\n    public bCode: any;\r\n    public uName: string;\r\n\r\n    // Flag to be used for checking whether we are adding/editing an entry\r\n    public isEdited: boolean = false;\r\n\r\n    //Flag to hide the form upon successful completion of remote operation\r\n    public hideForm: boolean = false;\r\n\r\n    //Property to help set the page title\r\n    public pageTitle: string;\r\n\r\n\r\n    //Property to store the recordID for when an existing entry is being edited\r\n    public recordID: any = null;\r\n\r\n    //Remote URI for retrieving data from and sending data to\r\n    private baseURI: string = \"http://ec2-34-244-210-200.eu-west-1.compute.amazonaws.com/\";\r\n    //private URL : String = \"http://ec2-34-244-210-200.eu-west-1.compute.amazonaws.com/slimapp/public/index.php/api/shoppingListEntry\";\r\n    //private baseURI2   : string = \"http://127.0.0.1/\";\r\n\r\n    options: BarcodeScannerOptions;\r\n    results: {};\r\n\r\n    // result of barcode scan\r\n    //public products : Array<any> =[];\r\n    public products: any[] = [];\r\n    public selectedProduct: any;\r\n    public productFound: boolean = false;\r\n\r\n    // Initialise module classes\r\n    constructor(private barcodeScanner: BarcodeScanner,\r\n        public navCtrl: NavController,\r\n        public navParams: NavParams,\r\n        public http: HttpClient,\r\n        public NP: NavParams,\r\n        public fb: FormBuilder,\r\n        public toastCtrl: ToastController) {\r\n\r\n            this.uName = this.navParams.get('data');\r\n            console.log(this.uName);\r\n\r\n        // Create form builder validation rules\r\n        this.form = fb.group({\r\n            \"ProductName\": [\"\", Validators.required],\r\n            \"ProductQuantity\": ['', Validators.compose([Validators.required,\r\n            Validators.pattern('[1,2,3,4,5,6,7,8,9,10,11]'), Validators.minLength(1), Validators.maxLength(8)])],\r\n            \"ProductPrice\": ['', Validators.compose([Validators.required,\r\n            Validators.minLength(1), Validators.maxLength(8)])]\r\n        });\r\n    }\r\n\r\n\r\n\r\n\r\n    /**\r\n     * Triggered when template view is about to be entered\r\n     * Determine whether we adding or editing a record\r\n     * based on any supplied navigation parameters\r\n     */\r\n    ionViewWillEnter(): void {\r\n        this.resetFields();\r\n        //this.loadProducts();\r\n        if (this.NP.get(\"record\")) {\r\n            this.isEdited = true;\r\n            this.selectEntry(this.NP.get(\"record\"));\r\n            this.pageTitle = 'Amend entry';\r\n        }\r\n        else {\r\n            this.isEdited = false;\r\n            this.pageTitle = 'Create Entry';\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    /**\r\n     * Assign the navigation retrieved data to properties\r\n     * used as models on the page's HTML form\r\n     *\r\n     */\r\n    selectEntry(item: any): void {\r\n        this.recordID = item.CustomerID;\r\n        this.productName = item.ProductName;\r\n        this.productQuantity = item.ProductQuantity;\r\n        this.productPrice = item.ProductPrice;\r\n    }\r\n\r\n    addItem(item: any): void {\r\n        // this.recordID = item.CustomerID;\r\n        this.productName = item.ProductName;\r\n        this.productQuantity = 1;\r\n        this.productPrice = item.ProductPrice;\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    /**\r\n     * Save a new record that has been added to the page's HTML form\r\n     * Use angular's http post method to submit the record data\r\n     *\r\n     */\r\n    createEntry(ProductName: string, ProductQuantity: number, ProductPrice: number, uName): void {\r\n        let headers: any = new HttpHeaders({ 'Content-Type': 'application/json' }),\r\n            options: any = { \"key\": \"create\", \"ProductName\": ProductName, \"ProductQuantity\": ProductQuantity, \"ProductPrice\": ProductPrice, \"uName\": uName },\r\n            url: any = this.baseURI + \"manage-dataAWS.php\";\r\n        // url       : any      \t= this.URL + \"/add\";\r\n\r\n        this.http.post(url, JSON.stringify(options), headers)\r\n            .subscribe((data: any) => {\r\n                // If the request was successful notify the user\r\n                this.hideForm = true;\r\n                this.sendNotification(`${ProductName} was added`);\r\n                this.navCtrl.push('ShoppingListPage', {\r\n                    data: uName\r\n                  }); \r\n            },\r\n                (error: any) => {\r\n                    this.sendNotification('Something went wrong!');\r\n                });\r\n    }\r\n\r\n\r\n\r\n\r\n    /**\r\n     * Update an existing record that has been edited in the page's HTML form\r\n     * Use angular's http post method to submit the record data\r\n     * to our remote PHP script\r\n     *\r\n     */\r\n    updateEntry(ProductName: string, ProductQuantity: number, ProductPrice: number, dataChecked: string): void {\r\n        let headers: any = new HttpHeaders({ 'Content-Type': 'application/json' }),\r\n            options: any = { \"key\": \"update\", \"ProductName\": ProductName, \"ProductQuantity\": ProductQuantity, \"ProductPrice\": ProductPrice, \"dataChecked\": dataChecked, \"recordID\": this.recordID },\r\n            url: any = this.baseURI + \"manage-dataAWS.php\";\r\n\r\n        this.http\r\n            .post(url, JSON.stringify(options), headers)\r\n            .subscribe(data => {\r\n                // If the request was successful notify the user\r\n                this.hideForm = true;\r\n                this.sendNotification(`${ProductName} was updated`);\r\n                //this.navCtrl.push(ShoppingListPage);\r\n            },\r\n                (error: any) => {\r\n                    console.log(error);\r\n                    this.sendNotification('Something went wrong!');\r\n                });\r\n    }\r\n\r\n\r\n\r\n\r\n    /**\r\n     * Remove an existing record that has been selected in the page's HTML form\r\n     * Use angular's http post method to submit the record data\r\n     * to our remote PHP script\r\n     *\r\n     */\r\n    deleteEntry(): void {\r\n        let name: string = this.form.controls[\"ProductName\"].value,\r\n            headers: any = new HttpHeaders({ 'Content-Type': 'application/json' }),\r\n            options: any = { \"key\": \"delete\", \"recordID\": this.recordID },\r\n            url: any = this.baseURI + \"manage-dataAWS.php\";\r\n\r\n        this.http\r\n            .post(url, JSON.stringify(options), headers)\r\n            .subscribe(data => {\r\n                this.hideForm = true;\r\n                this.sendNotification(`${name} was deleted`);\r\n                this.navCtrl.push(ShoppingListPage);\r\n            },\r\n                (error: any) => {\r\n                    this.sendNotification('Something went wrong!');\r\n                });\r\n    }\r\n\r\n\r\n\r\n\r\n    /**\r\n     * Handle data submitted from the page's HTML form\r\n     * Determine whether we are adding a new record or amending an\r\n     * existing record\r\n     */\r\n    saveEntry(): void {\r\n        let\r\n            prodName: string = this.form.controls[\"ProductName\"].value,\r\n            prodQuantity: number = this.form.controls[\"ProductQuantity\"].value,\r\n            prodPrice: number = this.form.controls[\"ProductPrice\"].value,\r\n            dataChecked: string = \"False\";\r\n\r\n        if (this.isEdited) {\r\n            this.updateEntry(prodName, prodQuantity, prodPrice, dataChecked);\r\n        }\r\n        else {\r\n            this.createEntry(prodName, prodQuantity, prodPrice, this.uName);\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    /**\r\n     * Clear values in the page's HTML form fields\r\n     *\r\n     */\r\n    resetFields(): void {\r\n        //this.custID           = \"\";\r\n        this.productName = \"\";\r\n        this.productQuantity = \" \";\r\n        this.productPrice = \" \";\r\n    }\r\n\r\n\r\n\r\n\r\n    /**\r\n     * Manage notifying the user of the outcome of remote operations\r\n     *\r\n     */\r\n    sendNotification(message: string): void {\r\n        let notification = this.toastCtrl.create({\r\n            message: message,\r\n            duration: 3000\r\n        });\r\n        notification.present();\r\n    }\r\n\r\n    ionViewDidLoad() {\r\n        console.log('ionViewDidLoad ShoppingListPage');\r\n    }\r\n\r\n\r\n\r\n    // get product from barcode after scanning \r\n    getData(bCode) {\r\n\r\n        let\r\n            url: any = this.baseURI + \"retrieve-productsAWS.php\";\r\n        this.http.get(url)\r\n            .subscribe((data: any) => {\r\n                this.selectedProduct = {};\r\n                // If the request was successful notify the user\r\n                this.products = data;\r\n                this.productFound = true;\r\n                this.sendNotification(`Product Found`);\r\n                this.selectedProduct = this.products.find(products => products.BarcodeNo === bCode);\r\n                console.log(this.selectedProduct);\r\n                this.addItem(this.selectedProduct);\r\n            },\r\n                (error: any) => {\r\n                    console.log(bCode);\r\n                    console.log(error);\r\n                    this.sendNotification('Something went wrong!');\r\n                });\r\n    }\r\n\r\n\r\n    scan() {\r\n        //this.selectedProduct={};\r\n        this.barcodeScanner.scan().then((barcodeData) => {\r\n            this.selectedProduct = this.getData(barcodeData.text);\r\n        }, (err) => {\r\n            console.dir(err);\r\n        })\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/add-new-item/add-new-item.ts"],"sourceRoot":""}